{"version":3,"sources":["components/Editor.js","components/App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","TabPanel","children","index","other","role","hidden","id","Box","p","Typography","a11yProps","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","background","paper","display","height","tabs","borderRight","divider","App","classes","React","useState","setValue","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","Tabs","orientation","variant","event","newValue","Tab","label","style","width","title","sandbox","frameBorder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd5766f.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\n\r\nexport default function Editor(props) {\r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    }=props\r\n\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n            </div>\r\n            \r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping:true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    theme:'material',\r\n                    lineNumbers:true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Editor from './Editor';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={2}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: 350,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nfunction App(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [html,setHtml] = useState('');\r\n  const [css,setCss] = useState('');\r\n  const [js,setJs] = useState('');\r\n  const [srcDoc,setSrcDoc]=useState('');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const timeout=setTimeout(()=>{\r\n      setSrcDoc(`\r\n      <html>\r\n        <body>${html}</body>\r\n        <style>${css}</style>\r\n        <script>${js}</script>\r\n      </html>\r\n    `)\r\n    },250)\r\n\r\n    return ()=>clearTimeout(timeout)\r\n\r\n  },[html,css,js])\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root} id=\"top-pane\">\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          variant=\"scrollable\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"File Explorer\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab label=\"index.html\" {...a11yProps(0)} />\r\n          <Tab label=\"index.css\" {...a11yProps(1)} />\r\n          <Tab label=\"index.js\" {...a11yProps(2)} />\r\n          <Tab label=\"Share\" {...a11yProps(3)} />\r\n        </Tabs>\r\n\r\n        <TabPanel value={value} index={0} style={{width:\"100%\"}}>\r\n          <Editor\r\n            language=\"xml\"\r\n            displayName=\"HTML </>\"\r\n            value={html}\r\n            onChange={setHtml}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} style={{width:\"100%\"}}>\r\n          <Editor\r\n            language=\"css\"\r\n            displayName=\"CSS </>\"\r\n            value={css}\r\n            onChange={setCss}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} style={{width:\"100%\"}}>\r\n          <Editor\r\n            language=\"javascript\"\r\n            displayName=\"JS </>\"\r\n            value={js}\r\n            onChange={setJs}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3} style={{width:\"100%\"}}>\r\n          \r\n        </TabPanel>\r\n      </div>\r\n\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}