{"version":3,"sources":["components/Editor.js","components/App.js","reportWebVitals.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","TabPanel","children","index","other","role","hidden","id","Box","p","Typography","a11yProps","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","background","paper","display","height","tabs","borderRight","divider","App","classes","React","useState","setValue","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","Tabs","orientation","variant","event","newValue","Tab","label","style","width","title","sandbox","frameBorder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd5766f.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\n\r\nexport default function Editor(props) {\r\n    const{\r\n        language,\r\n        displayName,\r\n        value,\r\n        onChange\r\n    }=props\r\n\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n            </div>\r\n            \r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping:true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    theme:'material',\r\n                    lineNumbers:true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Editor from './Editor';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={2}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 350,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [html,setHtml] = useState('');\n  const [css,setCss] = useState('');\n  const [js,setJs] = useState('');\n  const [srcDoc,setSrcDoc]=useState('');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(()=>{\n    const timeout=setTimeout(()=>{\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n    `)\n    },250)\n\n    return ()=>clearTimeout(timeout)\n\n  },[html,css,js])\n\n  return (\n    <>\n      <div className={classes.root} id=\"top-pane\">\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"File Explorer\"\n          className={classes.tabs}\n        >\n          <Tab label=\"index.html\" {...a11yProps(0)} />\n          <Tab label=\"index.css\" {...a11yProps(1)} />\n          <Tab label=\"index.js\" {...a11yProps(2)} />\n          <Tab label=\"Share\" {...a11yProps(3)} />\n        </Tabs>\n\n        <TabPanel value={value} index={0} style={{width:\"100%\"}}>\n          <Editor\n            language=\"xml\"\n            displayName=\"HTML </>\"\n            value={html}\n            onChange={setHtml}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1} style={{width:\"100%\"}}>\n          <Editor\n            language=\"css\"\n            displayName=\"CSS </>\"\n            value={css}\n            onChange={setCss}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={2} style={{width:\"100%\"}}>\n          <Editor\n            language=\"javascript\"\n            displayName=\"JS </>\"\n            value={js}\n            onChange={setJs}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={3} style={{width:\"100%\"}}>\n          \n        </TabPanel>\n      </div>\n\n      <div className=\"pane\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}